<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="bwDownload.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMDAQbAAAAADoBwAAFgAAACgAAAAwAAAAYAAAAAEABAAAAAAAAAYAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAACAAACAAAAAgIAAgAAAAIAAgACAgAAAgICAAMDAwAAAAP8AAP8AAAD//wD/AAAA/wD/AP//
        AAD///8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAd3dwAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAd3d3AAAAAAAAAAAAAAAAAAAAAAAAAAAAeHd3AAAAAAAAAAAAAAAAB3d3cAAAAAAAeHd3AAAA
        AAAAAAAAAAB3d3d3d3dwAAAAd3d3B3cAAAAAAAAAAHd3d3d3cAAHAAAAeHd3ePhwAAAAAAAAAHd3d3d3
        cAAHAAAAeHd3f/93AAAAAAAAB3d3d3d3cAAHAHdweId3//93B3d3AAAAB3d3d3d3cAAHB4+Hj4iI//93
        B3AAdwAAB3d3d3d3cAAHB////4iIj/h3d3AABwAAB3d3d3d3dwAHeP///4iI/4d3d3AABwAAB3dwAAAA
        d3cHeI//+IeHd3cHd3AAAHAAB3cAAAAAAHd3eI/4iId3dEAAAHdwAHAAB3B3d3d3d3d3d3d3iId3d3d0
        AAAHd3AAAHAAAAAAd3d3d3d3+Id3d3d3d0AAB3AAAHAAAAAAd3d3d3d4+Ih3d3d3eHdwBwAAAHAAAAAA
        d3d3d3d4+Hd4h3d3d3iHAAAAAHAAAAAAd3d3d3d3iHd4j/iHszN3cQAAAAcAAAAAd3d3d3d3h3d3d3i4
        hzMzMzAAAAB3d3d3d3d3d3d3h3d3AzuIiDMzMzAAAAAAAAB3d3d3d3d3iHd3A4iIiDMzMzAAAAAAAAd3
        d3d3d3d4iHd3d4u7iLMzMzEAAAAAAHd3d3d3d3d4iHd3d3d3c7iLMzAAAAAAd3d3d3eIiIiIiHd3d3d3
        d3d3MxAAAAAHd3d3eIh3d3iI+Ih3d3d3d4iHQAAAAAAHd3d4+Hd3d3eIh3d4h3d3d3iIcAAAAAB3d3j/
        h3d3d3d4iHd4iIiIiIiHcAAAAAB3d4//d3d3d3d4//h3d3d3d3d3AAAAAAd3eP//h3d3d3d4d3cHd3d3
        eP/3cAAAAAd3j///93d3d3iIiId3d3d3j//4cAAAAAeI//////iHiIiIiIh3d3d4////cAAAAACP///4
        j////4d3iI/4iI//////gAAAAAeP/3d3d3j/+Hd3d4//////////gAAAAAePh3d3d3d/93d3d4//h3d3
        eP//gAAAAAePd3d3d3d4+Hd3eI/3d3d3d3//gAAAAAePd3d3d3d//4h4iP+Hd3d3d3j/cAAAAACPd3d3
        d3ePiIiIiP93d3d3d3j4cAAAAAB4+Hd3d4j4d3d3eI+Hd3d3d3/3AAAAAAAI//+Ij/iHd3d3d4j4d3d3
        eP9wAAAAAAAHiP//+Ih3d3d3d3//+IiI//cAAAAAAAAACI/4iIh3d3d3d3iP////+HAAAAAAAAAAAHiI
        iIh3d3d3d4iI///4dwAAAAAAAAAAAAB4iIiHd3d3iIiI/4h3AAAAAAAAAAAAAAAAd4iIiIiIiIiId3AA
        AAAAAAAAAAAAAAAAAAB3d3d3d3dwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA////////AAD///+H//8AAP//
        /4P//wAA////g///AAD///+D//8AAP///wP//wAA////Ah//AAD///8AH/8AAP///wAf/wAA///wAB//
        AAD///AAH/8AAP//4AA//wAA///gAP//AAD//6AB//8AAP///gA//wAA///+AAf/AAD///4AAP8AAP//
        /gAAPwAA///yAAA/AAD//4AAAA8AAP/wAAAABwAA//AAAAAHAAD/wAAAAAcAAP+AAAAADwAA/wAAAAAf
        AAD+AAAAAD8AAPwAAAAAPwAA+AAAAAAfAAD4AAAAAB8AAPAAAAAAHwAA8AAAAAAfAADwAAAAAB8AAPAA
        AAAAHwAA8AAAAAAfAADwAAAAAB8AAPAAAAAAHwAA8AAAAAA/AAD4AAAAAD8AAPgAAAAAfwAA/AAAAAD/
        AAD+AAAAAf8AAP8AAAAD/wAA/8AAAA//AAD/8AAAP/8AAP/+AAH//wAA////////AAD///////8AAP//
        /////wAA
</value>
  </data>
</root>